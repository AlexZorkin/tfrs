---
kind: Template
apiVersion: v1
metadata:
  name: nagios-dc
  creationTimestamp:
parameters:
- name: ENV_NAME
  required: true
- name: SMTP_SERVER_HOST
  displayName: SMTP_SERVER_HOST
  description: All environment use same email server
  value: apps.smtp.gov.bc.ca
  required: true
- name: DATABASE_SERVICE_NAME
  displayName: database service name
  description: database service name
  required: true
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: nagios
    annotations:
      volume.beta.kubernetes.io/storage-class: netapp-file-standard
      template.openshift.io.bcgov/create: 'true'
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: nagios
    generation: 1
    creationTimestamp:
    labels:
      app: nagios
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources:
        requests:
          cpu: 50m
          memory: 150Mi
        limits:
          cpu: 200m
          memory: 200Mi
      activeDeadlineSeconds: 700
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - nagios
        from:
          kind: ImageStreamTag
          name: nagios:${ENV_NAME}
    - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: nagios
      deploymentconfig: nagios
    template:
      metadata:
        creationTimestamp:
        labels:
          app: nagios
          deploymentconfig: nagios
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
        - name: nagios-data
          persistentVolumeClaim:
            claimName: nagios
        containers:
        - name: nagios
          image: ''
          env:
          - name: AMQP_HOST
            value: tfrs-${ENV_NAME}-rabbitmq-cluster.0ab226-${ENV_NAME}.svc.cluster.local
          - name: AMQP_PORT
            value: '5672'
          - name: AMQP_USER
            value: tfrs
          - name: AMQP_VHOST
            value: "/tfrs"
          - name: AMQP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: tfrs-${ENV_NAME}-rabbitmq-cluster-secret
                key: tfrs_password
          - name: MINIO_ENDPOINT
            value: tfrs-minio-${ENV_NAME}.apps.silver.devops.gov.bc.ca:443
          - name: MINIO_USE_SSL
            value: 'true'
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: tfrs-minio-${ENV_NAME}
                key: MINIO_ACCESS_KEY
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: tfrs-minio-${ENV_NAME}
                key: MINIO_SECRET_KEY
          - name: SMTP_SERVER_HOST
            value: "${SMTP_SERVER_HOST}"
          - name: DATABASE_SERVICE_NAME
            value: "${DATABASE_SERVICE_NAME}"
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: patroni-${ENV_NAME}
                key: app-db-name
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: patroni-${ENV_NAME}
                key: app-db-username
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: patroni-${ENV_NAME}
                key: app-db-password
          resources:
            limits:
              cpu: 200m
              memory: 2Gi
          volumeMounts:
          - name: nagios-data
            mountPath: "/var/log/nagios3"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
        serviceAccount: nagios
        serviceAccountName: nagios
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
  status:
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    updatedReplicas: 0
    availableReplicas: 0
    unavailableReplicas: 0
- kind: Service
  apiVersion: v1
  metadata:
    name: nagios
    creationTimestamp:
    labels:
      app: nagios
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: nagios
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: nagios
    creationTimestamp:
    labels:
      app: nagios
    annotations:
      openshift.io/host.generated: 'true'
  spec:
    host: nagios-tfrs-${ENV_NAME}.apps.silver.devops.gov.bc.ca
    path: "/"
    to:
      kind: Service
      name: nagios
      weight: 100
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    wildcardPolicy: None
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: nagios
    creationTimestamp:
    labels:
      app: nagios
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.nagios: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"nagios"}}'
